name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: .github/actions/llms-txt-generator/package-lock.json

      - name: Install dependencies
        working-directory: .github/actions/llms-txt-generator
        run: npm ci

      - name: Run tests
        working-directory: .github/actions/llms-txt-generator
        run: npm test

      - name: Build and bundle
        working-directory: .github/actions/llms-txt-generator
        run: npm run package

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create release archive
        run: |
          cd .github/actions/llms-txt-generator
          tar -czf ../../../llms-txt-generator-${{ steps.get_version.outputs.VERSION }}.tar.gz \
            dist/ \
            action.yml \
            README.md \
            package.json

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            echo "First release"
            CHANGELOG="Initial release of llms.txt Generator GitHub Action"
          else
            echo "Generating changelog from $PREV_TAG to ${{ github.ref_name }}"
            CHANGELOG=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Save to file for multiline output
          echo "$CHANGELOG" > changelog.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body_path: changelog.txt
          files: |
            llms-txt-generator-${{ steps.get_version.outputs.VERSION }}.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update major version tag
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)
          
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Force update the major version tag (e.g., v1)
          git tag -fa v$MAJOR_VERSION -m "Update v$MAJOR_VERSION to ${{ github.ref_name }}"
          git push origin v$MAJOR_VERSION --force
          
          echo "âœ… Updated v$MAJOR_VERSION tag to point to ${{ github.ref_name }}"
